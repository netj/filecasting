#!/usr/bin/env bash
# filecasting -- A podcast generator for multimedia files
# Usage: filecasting FILE...
# 
# Prerequisites: following files should exists in an ancestor directory.
#  .filecast.title          which contains the title of the podcast
#  .filecast.description    which contains the description about the podcast
#  .filecast.baseurl        which contains the base URL of the podcast
#
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-02-20
# See-Also: http://www.apple.com/itunes/podcasts/specs.html
set -eu

usage() {
    sed -n '2,/^#$/ s/^# //p' <"$0"
    exit 1
}

if [ -t 2 ]; then
    msg() { echo "$@" >&2; }
else
    msg() { :; }
fi

find-up() {
    local f=$1; shift
    local d=$PWD
    while ! [ -e "$f" ]; do
        if [ "$PWD" = / ]; then
            echo "$d: $f: Not found" >&2
            return 1
        fi
        cd ..
    done
    echo "$PWD/$f"
}

cat-up() {
    local f=
    if f=`find-up "$@"`; then
        cat "$f"
    else
        false
    fi
}

urlescape() {
    python -c 'import sys,urllib; print urllib.quote(sys.argv[1])' "$1"
    #perl -MURI::Escape -e 'print uri_escape_utf8($_, "^A-Za-z0-9\-\._~/") foreach @ARGV;' "$@"
    #sed 's/%/%26/g; s/ /%20/g;' <<<"$1"
}

xmlescape() {
    sed '
    s/\&/\&amp;/g
    s/</\&lt;/g
    s/>/\&gt;/g
    s/"/\&quot;/g
    s/'\''/\&apos;/g
    '
}

itunes-supported() {
    local f=$1; shift
    # See-Also: <enclosure> section of http://www.apple.com/itunes/podcasts/specs.html#rss
    # Let's first try with filename (XXX since file command doesn't detect mp3 audio files very well)
    case "`tr A-Z a-z <<<"$f"`" in # ignoring case
        *.mp3)          echo "audio/mpeg"           ;;
        *.m4a)          echo "audio/x-m4a"          ;;
        *.mp4)          echo "video/mp4"            ;;
        *.m4v)          echo "video/x-m4v"          ;;
        *.mov)          echo "video/quicktime"      ;;
        *.pdf)          echo "application/pdf"      ;;
        *.epub)         echo "document/x-epub"      ;;
        *.png)          echo "image/png"            ;;
        *.jpg|*.jpeg)   echo "image/jpeg"           ;;
        *) # then, try detecting file type with magic :)
            local mimetype=`file --brief --mime-type "$f"`
            mimetype=${mimetype%%;*}
            case $mimetype in
                \
                     audio/mpeg         \
                    |audio/x-m4a        \
                    |video/mp4          \
                    |video/x-m4v        \
                    |video/quicktime    \
                    |application/pdf    \
                    |document/x-epub    \
                    |image/png          \
                    |image/jpeg         \
                    ) echo "$mimetype" ;;
            *) false ;;
        esac
        ;;
    esac
}

[ $# -gt 0 ] || usage

baseurlfile=`find-up .filecast.baseurl`
baseurldir=`dirname "$baseurlfile"`
BaseURL="`cat "$baseurlfile"``urlescape "${PWD#$baseurldir}"`"

Title=`cat-up .filecast.title`
Link=`cat-up .filecast.link 2>/dev/null || echo ""`
Description=`cat-up .filecast.description 2>/dev/null` || true


cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
<channel>
<title>`xmlescape <<<"$Title"`</title>
${Link:+<link>`xmlescape <<<"$Link"`</link>}
<description>`xmlescape <<<"$Description"`</description>
EOF

ls -dt "$@" |
while read f; do
    mimetype=`itunes-supported "$f"` || continue
    [ ! -e "$f".ignore ] || continue
    msg "$f"

    title=$f
    title=${title%.*}
    title=${title##*/}
    category=`dirname "$f"`
    [ . != "$category" ] || category=
    url="$BaseURL/`urlescape "$f"`"
    sha1=`[ "$f".sha1 -nt "$f" -a -s "$f".sha1 ] && cat "$f".sha1 || sha1sum "$f" | tee "$f".sha1`
    sha1=`set -- $sha1; echo $1`
    length=`stat -c %s "$f"`
    date=`date -r "$f" +%FT%T%:z`
    pubdate=`date -r "$f" --rfc-2822`
    link=`[ -r "$f".link ] && cat "$f".link || echo "$url"`

    echo "<item>"
    echo "<title>`xmlescape <<<"$title"`</title>"
    [ -z "$link" ] || echo "<link>`xmlescape <<<"$link"`</link>"
    echo "<description>"
    [ -n "$category" ] && xmlescape <<<"$category"
    [ -r "$f".description ] && xmlescape <"$f".description
    echo "</description>"
    printf '<enclosure url="%s" length="%d" type="%s"/>\n' \
        "`xmlescape <<<"$url"`" "$length" "`xmlescape <<<"$mimetype"`" <<<""
    echo "<guid>$sha1</guid>"
    echo "<pubDate>$pubdate</pubDate>"
    echo "<dc:date>$date</dc:date>"
    echo "</item>"
done

cat <<EOF
</channel>
</rss>
EOF
